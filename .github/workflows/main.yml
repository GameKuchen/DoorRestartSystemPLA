name: Build .NET DLL

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Check out dependencies repository
        uses: actions/checkout@v2
        with:
          repository: my-dependencies-repo
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x
      - name: Build DLL
        run: |
          dotnet restore
          cp ../dependencies/dependenciesdrs.zip .
          dotnet build --configuration Release --output ./bin/Release
      - name: Zip DLL and dependencies
        run: |
          cp dependencies.zip ./bin/Release/
          7z a -tzip dependencies.zip ./bin/Release/*.dll
      - name: Install GitHub Actions for GitHub Releases
        uses: softprops/action-gh-release@v1
      - name: Create Release
        id: create_release
        uses: actions/github-release-v1@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
      - name: Upload DLL
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/Release/*.dll
          asset_name: DoorRestartSystem${{ github.ref }}.dll
          asset_content_type: application/vnd.microsoft.portable-executable
      - name: Upload dependencies ZIP
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dependencies.zip
          asset_name: dependencies.zip
          asset_content_type: application/zip
